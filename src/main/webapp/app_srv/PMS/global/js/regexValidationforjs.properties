name.regex = ^[a-zA-z0-9]+([a-zA-Z0-9#&'\$()\-,\.\/]+\s)*[a-zA-Z0-9#&'\$()\-,\.\/]+$
name.regex.message = Start with A-Z,a-z,0-9 and only Single Space and  # $ & ' ( ) / -  .  , allowed

amount.regex = ^\d*[0-9]?(?:\.[0-9]{1,2})?$
amount.regex.message = Only Numeric Value upto 2 decimal points are allowed

mobileno.regex = ^(?:(?:\+|0{0,2})91(\s*[\-]\s*)?|[0]?)?[789]\d{9}$
mobileno.regex.message = Mobile no. may start with 0,+91-,91-,+91, followed by 10 digit Mobile no.

email.regex = ^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$
email.regex.message = Email may start with A-Z,a-z,_ ,It must contain @  and at least 2 characters after .

address.regex = ^(\w*\s*[\#\-\,\/\.\(\)\&]*)+$
address.regex.message = Address may contain A-Z,a-z,any white space character,match a single character present # - , . / ( ) &,+ Between one and unlimited times,
						* Between zero and unlimited times,^ assert position at start of the string  .
						
numeric.regex= ^([1-9][0-9]*)$
numeric.regex.message = Only numeric value in the range 1-9 followed by zero or more other digits are allowed

website.regex= ^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/)?[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$
website.regex.message= Format for Website URL is not valid

fileno.regex=^(\w*\s*[\#\-\,\/\.\(\)\&]*)+$
fts.fileno.regex.message=Format for File No. is not valid

contact.regex=^(?=.*[0-9])[- +()0-9]+$
contact.regex.message=Contact no. may start with 0,+ and -,(),+ are allowed

nonRestrictname.regex = ^[a-zA-z0-9]+([A-za-z\d#&'\$()\-,\.\/\s])+$
nonRestrictname.regex.message = Start with A-Z,a-z,0-9 and only Space # $ &  ( ) / -  .  , allowed

integer.regex= ^([0-9]*)$
integer.regex.message = Only numeric value are allowed

gst.regex = ^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$
gst.regex.message = Format for GST No. is invalid


tan.regex = ^[A-Z]{5}+[0-9]{4}+[A-Z]{1}$
tan.regex.message = Format for TAN No. is invalid